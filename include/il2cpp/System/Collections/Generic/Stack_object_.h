#pragma once

#include "il2cpp.h"

void System_Collections_Generic_Stack_object____ctor (System_Collections_Generic_Stack_object__o* __this, const MethodInfo_29EC720* method);
void System_Collections_Generic_Stack_object____ctor (System_Collections_Generic_Stack_object__o* __this, int32_t capacity, const MethodInfo_29EC770* method);
int32_t System_Collections_Generic_Stack_object___get_Count (System_Collections_Generic_Stack_object__o* __this, const MethodInfo_29EC880* method);
void System_Collections_Generic_Stack_object___Clear (System_Collections_Generic_Stack_object__o* __this, const MethodInfo_29EC890* method);
void System_Collections_Generic_Stack_object___System_Collections_ICollection_CopyTo (System_Collections_Generic_Stack_object__o* __this, System_Array_o* array, int32_t arrayIndex, const MethodInfo_29EC8D0* method);
System_Collections_Generic_IEnumerator_T__o* System_Collections_Generic_Stack_object___System_Collections_Generic_IEnumerable_T__GetEnumerator (System_Collections_Generic_Stack_object__o* __this, const MethodInfo_29ECB70* method);
System_Collections_IEnumerator_o* System_Collections_Generic_Stack_object___System_Collections_IEnumerable_GetEnumerator (System_Collections_Generic_Stack_object__o* __this, const MethodInfo_29ECC00* method);
Il2CppObject* System_Collections_Generic_Stack_object___Peek (System_Collections_Generic_Stack_object__o* __this, const MethodInfo_29ECC90* method);
Il2CppObject* System_Collections_Generic_Stack_object___Pop (System_Collections_Generic_Stack_object__o* __this, const MethodInfo_29ECD00* method);
void System_Collections_Generic_Stack_object___Push (System_Collections_Generic_Stack_object__o* __this, Il2CppObject* item, const MethodInfo_29ECD90* method);
System_Object_array* System_Collections_Generic_Stack_object___ToArray (System_Collections_Generic_Stack_object__o* __this, const MethodInfo_29ECE30* method);
void System_Collections_Generic_Stack_object___ThrowForEmptyStack (System_Collections_Generic_Stack_object__o* __this, const MethodInfo_29ECF30* method);
