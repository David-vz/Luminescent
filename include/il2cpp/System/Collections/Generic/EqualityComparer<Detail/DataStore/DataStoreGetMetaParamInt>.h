#pragma once

#include "il2cpp.h"

System_Collections_Generic_EqualityComparer_T__o* System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStoreGetMetaParamInt___get_Default (const MethodInfo_2A6D130* method);
System_Collections_Generic_EqualityComparer_T__o* System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStoreGetMetaParamInt___CreateComparer (const MethodInfo_2A6D240* method);
int32_t System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStoreGetMetaParamInt___IndexOf (System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStoreGetMetaParamInt__o* __this, NexPlugin_Detail_DataStore_DataStoreGetMetaParamInt_array* array, NexPlugin_Detail_DataStore_DataStoreGetMetaParamInt_o value, int32_t startIndex, int32_t count, const MethodInfo_2A6D860* method);
int32_t System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStoreGetMetaParamInt___LastIndexOf (System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStoreGetMetaParamInt__o* __this, NexPlugin_Detail_DataStore_DataStoreGetMetaParamInt_array* array, NexPlugin_Detail_DataStore_DataStoreGetMetaParamInt_o value, int32_t startIndex, int32_t count, const MethodInfo_2A6D990* method);
int32_t System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStoreGetMetaParamInt___System_Collections_IEqualityComparer_GetHashCode (System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStoreGetMetaParamInt__o* __this, Il2CppObject* obj, const MethodInfo_2A6DAB0* method);
bool System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStoreGetMetaParamInt___System_Collections_IEqualityComparer_Equals (System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStoreGetMetaParamInt__o* __this, Il2CppObject* x, Il2CppObject* y, const MethodInfo_2A6DBB0* method);
void System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStoreGetMetaParamInt____ctor (System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStoreGetMetaParamInt__o* __this, const MethodInfo_2A6DD80* method);
