#pragma once

#include "il2cpp.h"

System_Collections_Generic_EqualityComparer_T__o* System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStorePasswordInfoInt___get_Default (const MethodInfo_2A6E990* method);
System_Collections_Generic_EqualityComparer_T__o* System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStorePasswordInfoInt___CreateComparer (const MethodInfo_2A6EAA0* method);
int32_t System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStorePasswordInfoInt___IndexOf (System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStorePasswordInfoInt__o* __this, NexPlugin_Detail_DataStore_DataStorePasswordInfoInt_array* array, NexPlugin_Detail_DataStore_DataStorePasswordInfoInt_o value, int32_t startIndex, int32_t count, const MethodInfo_2A6F0C0* method);
int32_t System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStorePasswordInfoInt___LastIndexOf (System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStorePasswordInfoInt__o* __this, NexPlugin_Detail_DataStore_DataStorePasswordInfoInt_array* array, NexPlugin_Detail_DataStore_DataStorePasswordInfoInt_o value, int32_t startIndex, int32_t count, const MethodInfo_2A6F1D0* method);
int32_t System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStorePasswordInfoInt___System_Collections_IEqualityComparer_GetHashCode (System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStorePasswordInfoInt__o* __this, Il2CppObject* obj, const MethodInfo_2A6F2D0* method);
bool System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStorePasswordInfoInt___System_Collections_IEqualityComparer_Equals (System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStorePasswordInfoInt__o* __this, Il2CppObject* x, Il2CppObject* y, const MethodInfo_2A6F3C0* method);
void System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStorePasswordInfoInt____ctor (System_Collections_Generic_EqualityComparer_Detail_DataStore_DataStorePasswordInfoInt__o* __this, const MethodInfo_2A6F570* method);
